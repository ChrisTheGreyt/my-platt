version: 1
applications:
  - appRoot: ttc-app
    frontend:
      phases:
        preBuild:
          commands:
            # Clean install with more aggressive cleanup
            - npm cache clean --force
            - rm -rf node_modules package-lock.json .next
            # Update package.json - remove TailwindCSS from devDependencies
            - |
              echo "Updating package.json..."
              node -e '
                const fs = require("fs");
                const pkg = JSON.parse(fs.readFileSync("package.json"));
                // Remove from devDependencies
                if (pkg.devDependencies && pkg.devDependencies.tailwindcss) {
                  delete pkg.devDependencies.tailwindcss;
                }
                // Ensure in dependencies
                pkg.dependencies = pkg.dependencies || {};
                pkg.dependencies.tailwindcss = "3.4.1";
                pkg.dependencies.postcss = "8.4.35";
                pkg.dependencies.autoprefixer = "10.4.17";
                fs.writeFileSync("package.json", JSON.stringify(pkg, null, 2));
                console.log("Updated package.json:", JSON.stringify(pkg, null, 2));
              '
            # Install dependencies with specific flags
            - npm install --no-package-lock --no-audit
            # Install TailwindCSS explicitly
            - npm install tailwindcss@3.4.1 --save --no-package-lock
            # Verify installation
            - echo "=== Verifying Installation ==="
            - npm list tailwindcss
            - echo "=== Node Modules Content ==="
            - ls -la node_modules/tailwindcss || echo "tailwindcss not found!"
            # Create postcss.config.js
            - |
              echo "module.exports = {
                plugins: {
                  tailwindcss: {},
                  autoprefixer: {},
                }
              }" > postcss.config.js
            # Add environment variable
            - echo "DISABLE_UPLOAD=true" >> .env
            # Create next.config.js if it doesn't exist
            - |
              if [ ! -f next.config.js ]; then
                echo "/** @type {import('next').NextConfig} */
                const path = require('path');
                const nextConfig = {
                  webpack: (config) => {
                    config.resolve.alias = {
                      ...config.resolve.alias,
                      '@': path.join(__dirname, 'src')
                    };
                    return config;
                  }
                };
                module.exports = nextConfig;" > next.config.js
              fi
            # Verify configs
            - echo "=== Config Files ==="
            - cat postcss.config.js
            - cat next.config.js
            - cat tailwind.config.ts
        build:
          commands:
            - export NODE_PATH=$NODE_PATH:$(pwd)/src:$(pwd)/node_modules
            - NODE_ENV=production npm run build
      artifacts:
        baseDirectory: .next
        files:
          - '**/*'
      cache:
        paths:
          - node_modules/**/*
          - .npm/**/* 